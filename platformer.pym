"""
platformer.py
Author: Jack Meehan
Credit: 
Assignment:
Write and submit a program that implements the sandbox platformer game:
https://github.com/HHS-IntroProgramming/Platformer
"""
from ggame import App, Color, LineStyle, Sprite, RectangleAsset, CircleAsset, EllipseAsset, PolygonAsset, ImageAsset, Frame

SCREEN_WIDTH = 1000
SCREEN_HEIGHT = 800

blue = Color(0x2EFEC8, 1.0)
black = Color(0x000000, 1.0)
pink = Color(0xFF00FF, 1.0)
red = Color(0xFF5733, 1.0)
white = Color(0xFFFFFF, 1.0)
red = Color(0xff0000, 1.0)
green = Color(0x00ff00, 1.0)
blue = Color(0x0000ff, 1.0)
black = Color(0x000000, 1.0)
white = Color(0xffffff, 1.0)
grey = Color(0xC0C0C0, 1.0)

thinline = LineStyle(2, black)
blkline = LineStyle(1, black)
noline = LineStyle(0, white)
coolline = LineStyle(1, grey)
blueline = LineStyle(2, blue)
redline = LineStyle(1, red)
greenline = LineStyle(1, green)
gridline = LineStyle(1, black)
grid = RectangleAsset(30, 30, gridline, white)
box = RectangeAsset(30, 30, gridline, black)

class plateformer(App):
    def __init__(player, block, spring):
        self.p = player()
        self.b = block()
        self.s = spring()
    
    class player(object):
        def __init__(color, height, width)
            self.c = color()
            self.h = height()
            self.w = width()
        
        def appearance(self)
            box = RectangeAsset(self.w, self.h, gridline, self.c)
            return Sprite(box, (30, 30))
                
            jeff = player(red, 10, 5)
            print(player.appearance())

    def __init__(self):
        super().__init__()
        
myapp = App()
myapp.run()